#!/bin/bash

srcpath="$( cd "$( dirname "$0" )" && pwd )"
relink=''
update=''
ios=''
android=''

print_usage() {
	printf "
	Usage: [-d destinationPath] [-l] [-u] [-i] [-a] projectName

	projectName               Name of the project
	-d destinationPath        The destination path of the project, Projects/projectName if omitted
	-l                        To relink the Cacao directory if it is broken
	-u                        To update the old Cacao project to new
    -i                        To add support for ios project
    -a                        To add support for android project

	For Example: 
	./create
	./create MyProject
	./create -l -d ./cloned_path/cloned_project

	-h                        Show the help text
	"
}

fix_link() {
	if [ -L "$copypath/Cacao" ]; then
		rm "$copypath/Cacao"
	fi
	relpath=`python -c "import os.path; print(os.path.relpath('$srcpath/SDK', '$copypath'))"`
	cd "$copypath"
	ln -s $relpath Cacao
}

copy_files() {
	cp "$srcpath/Template/.gitignore" "$copypath"
	cp "$srcpath/Template/README.md" "$copypath"
	cp "$srcpath/Template/CacTemplate.sublime-project" "$copypath/$projname.sublime-project"
	sed -i '' "s/CacTemplate/$projname/g" "$copypath/CMakeLists.txt"
	sed -i '' "s/CacTemplate/$projname/g" "$copypath/README.md"
	sed -i '' "s/CacTemplate/$projname/g" "$copypath/$projname.sublime-project"
}

copy_not_custom() {
    cp "$srcpath/Template/CMakeLists.txt" "$copypath"
	sed -i '' "s/# sdk//g" "$copypath/CMakeLists.txt"
	sed -i '' "s/# platform//g" "$copypath/CMakeLists.txt"
}

copy_android() {
    cp "$srcpath/Template/Android/CMakeLists.txt" "$copypath"
    if [ -z ${CACAO_ANDROID_NDK+x} ]; then
        echo "Note: set the \$CACAO_ANDROID_NDK environment variable to remove this prompt"
        read -p "Android NDK Location (required) " CACAO_ANDROID_NDK
    fi

    if [ -z ${CACAO_GD_APK_FILE+x} ]; then
        echo "Note: set the \$CACAO_GD_APK_FILE environment variable to remove this prompt"
        read -p "Geometry Dash APK Location (required) " CACAO_GD_APK_FILE
    fi

    sed -i '' "s/_ndk/$CACAO_ANDROID_NDK/g" "$copypath/CMakeLists.txt"
    sed -i '' "s/_apk/$CACAO_GD_APK_FILE/g" "$copypath/CMakeLists.txt"
}

copy_ios() {
    cp "$srcpath/Template/iOS/CMakeLists.txt" "$copypath"
    cp "$srcpath/Template/iOS/control"  "$copypath"
	if [ -z ${CACAO_IOS_SDK+x} ]; then
		echo "Note: set the \$CACAO_IOS_SDK environment variable to remove this prompt"
		read -p "iPhoneOS SDK Location (required) " CACAO_IOS_SDK
	fi

	bundle=""
	read -p "Bundle Identifier [com.example.gdmod] " bundle
	bundle=${bundle:-"com.example.gdmod"}

	author=""
	read -p "Author [Someone] " author
	author=${author:-Someone}

	desc=""
	read -p "Description [My cool gd mod] " desc
	desc=${desc:-"My cool gd mod"}
	sed -i '' "s&_sdk&$CACAO_IOS_SDK&g" "$copypath/CMakeLists.txt"

	sed -i '' "s/%name/$projname/g" "$copypath/control"
	sed -i '' "s/%author/$author/g" "$copypath/control"
	sed -i '' "s/%bundle/$bundle/g" "$copypath/control"
	sed -i '' "s/%desc/$desc/g"     "$copypath/control"
}

while getopts 'd:lhuia' flag; do
	case "${flag}" in
		d) copypath="${OPTARG}" ;;
		l) relink='true' ;;
		u) update='true' ;;
		i) ios='true'    ;;
        a) android='true'    ;;
		h) print_usage
			exit 0 ;;
		*) print_usage
			exit 1 ;;
	esac
done

shift $((OPTIND-1))

projname="${1:-Default Project}"
if [ -z "$copypath" ]; then
	if [[ -z "${CACAO_PROJECT_FOLDER}" ]]; then
		copypath="$projname"
	else
		copypath="${CACAO_PROJECT_FOLDER}/$projname"
	fi
fi

if (( $# + $OPTIND > 1 )); then
	echo $projname
	if [ "$relink" = 'true' ]; then
		echo "Fixing link"
		fix_link
	elif [ "$update" = 'true' ]; then
		echo "Updating project"

		copy_files
		fix_link

	else
		if [ ! -d "$copypath" ]; then
			echo "Creating folder"
			mkdir -p "$copypath"
		fi
		echo "Copying files"

		touch "$copypath/main.cpp"
		echo "#define PROJECT_NAME \"$projname\"" >> "$copypath/main.cpp"
		cat "$srcpath/Template/main.cpp" >> "$copypath/main.cpp"

		copy_files

        if [ "$ios" = 'true' ]; then
        	echo 'ios mode'
        	copy_ios
        elif [ "$android" = 'true' ]; then
            echo 'android mode'
            copy_android
        else
        	copy_not_custom
        fi

        fix_link
		
	fi
	echo "Done."
else 
	print_usage
	exit 1
fi
